<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on Sonia Hamilton - Blog</title>
    <link>http://blog2.snowfrog.net/tags/haskell/</link>
    <description>Recent content in Haskell on Sonia Hamilton - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 22 May 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog2.snowfrog.net/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Haskell Hole Driven Development</title>
      <link>http://blog2.snowfrog.net/2015/05/22/haskell-hole-driven-development/</link>
      <pubDate>Fri, 22 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2015/05/22/haskell-hole-driven-development/</guid>
      <description>&lt;p&gt;I just finished attending the excellent &lt;a href=&#34;http://lambdajam.yowconference.com.au/&#34;&gt;Brisbane YOW! Lambda
Jam&lt;/a&gt;. One of the really useful
things I learned was &amp;ldquo;Hole Driven Development&amp;rdquo; for Haskell - basically
using the type system to help you write a function.&lt;/p&gt;

&lt;p&gt;Firstly, when writing a function, you can use placeholders that will
allow code to compile (without producing error messages) while you&amp;rsquo;re
working on other parts. The two placeholders are:&lt;/p&gt;


error &#34;todo&#34; (or any string)
undefined


&lt;p&gt;The &amp;ldquo;hole driven&amp;rdquo; part involves using the underscore to get the
compiler to print types:&lt;/p&gt;


_undefined
_x
_foo


&lt;p&gt;For example if I used &lt;code&gt;_x&lt;/code&gt; then re-loaded my code in ghci, I would get
output like:&lt;/p&gt;


Found hole ‘_x’ with type: a
...
g2 :: a -&gt; b (bound at GetSetLens.hs:312:31)
s2 :: a -&gt; b -&gt; a (bound at GetSetLens.hs:312:28)
g1 :: b -&gt; c (bound at GetSetLens.hs:312:18)
s1 :: b -&gt; c -&gt; b (bound at GetSetLens.hs:312:15)


&lt;p&gt;Showing me that where I had &lt;code&gt;_x&lt;/code&gt; a type &lt;code&gt;a&lt;/code&gt; was expected, and that I already
have functions &lt;code&gt;g2,s2,g1,s1&lt;/code&gt; that consume and produce (curry) given types.&lt;/p&gt;

&lt;p&gt;See also the post and video by Matthew Brecknell &lt;a href=&#34;http://matthew.brecknell.net/post/hole-driven-haskell/&#34;&gt;Hole-driven
Haskell&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu Minimal &#43; Xmonad</title>
      <link>http://blog2.snowfrog.net/2012/11/11/ubuntu-minimal-xmonad/</link>
      <pubDate>Sun, 11 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2012/11/11/ubuntu-minimal-xmonad/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m tired of Ubuntu&amp;rsquo;s latest desktop &lt;del&gt;mess&lt;/del&gt; offering (Unity). I&amp;rsquo;ve been trying lots of DE&amp;rsquo;s (Desktop Environments) and WM&amp;rsquo;s (Window Managers), and I&amp;rsquo;ve finally settled on one I luuuuurv - &lt;a href=&#34;http://xmonad.org/&#34;&gt;Xmonad&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On my next laptop build I was thinking of moving to Debian Netinst, but I like the Ubuntu ppa system. So my next laptop install will be &lt;a href=&#34;https://help.ubuntu.com/community/Installation/MinimalCD&#34;&gt;Ubuntu Minimal&lt;/a&gt; + &lt;a href=&#34;http://xmonad.org/&#34;&gt;Xmonad&lt;/a&gt;; will also me a good motivation for &lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;learning Haskell&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d looked Cinnamon and Gnome3 (more of the same), KDE (bleh - still looks like Windows 98), Fluxbox and XFCE. Then this &lt;a href=&#34;http://joey.hess.usesthis.com/&#34;&gt;great article about Joey Hess&lt;/a&gt; (original writer of the db_* debhelper tools) pointed me to Xmonad.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>