<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby On Rails on Sonia Hamilton - Blog</title>
    <link>http://blog2.snowfrog.net/tags/ruby-on-rails/</link>
    <description>Recent content in Ruby On Rails on Sonia Hamilton - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 29 Jun 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog2.snowfrog.net/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ruby and Rails – Time, Date, DateTime, TZInfo</title>
      <link>http://blog2.snowfrog.net/2011/06/30/ruby-and-rails-time-date-datetime-tzinfo/</link>
      <pubDate>Wed, 29 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2011/06/30/ruby-and-rails-time-date-datetime-tzinfo/</guid>
      <description>&lt;p&gt;From a discussion (&lt;a href=&#34;http://groups.google.com/group/rails-oceania/browse_thread/thread/6062f24822b3b3fc/981124480429da9f?lnk=gst&amp;amp;q=Re%3A+Ruby%3A+the+non-awesome+parts#981124480429da9f&#34;&gt;Ruby &amp;ndash; The Non-awesome parts&lt;/a&gt;) on the &lt;a href=&#34;http://rubyonrails.com.au/&#34;&gt;RORO&lt;/a&gt; email list &amp;ndash; the differences between Time, Date, DateTime and TZInfo:&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px;&#34;&gt;
  &gt;&gt; Time vs Date vs DateTime vs TZInfo (vs ActiveSupport::TimeZone). Which&lt;br /&gt; &gt;&gt; do I use and when?
&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px;&#34;&gt;
  Time is a timestamp and can represent a moment in time no matter where&lt;br /&gt; it occurred in the world, agnostic of timezone. Think UNIX timestamps.&lt;br /&gt; Date is a thing on a calendar that might mean a different moment in&lt;br /&gt; time to different people depending on their timezone. Think of Date&lt;br /&gt; for things like recording your birthday. DateTime subclasses Date and&lt;br /&gt; adds hour, minute, second and timezone information to a Date so it&lt;br /&gt; becomes a lot like Time, but that makes me unsure when to use DateTime&lt;br /&gt; and when to use Time, to be honest.
&lt;/p&gt;

&lt;p style=&#34;padding-left: 30px;&#34;&gt;
  Time has timezone capabilities built in. TZInfo has a different set of&lt;br /&gt; timezone capabilities and operates with Time objects, but seems to&lt;br /&gt; ignore their built-in timezone settings. I&#39;m still not sure why.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Aptana &#43; RadRails on Ubuntu Jaunty</title>
      <link>http://blog2.snowfrog.net/2009/08/17/installing-aptana-radrails-on-ubuntu-jaunty/</link>
      <pubDate>Mon, 17 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2009/08/17/installing-aptana-radrails-on-ubuntu-jaunty/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve always used vim as my main editor, but I thought I&amp;rsquo;d try RadRails since so many Rails people rave about it.&lt;/p&gt;

&lt;p&gt;Installing it on Ubuntu Jaunty is a bit non-obvious:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sudo aptitude install openjdk-6-jre (or your preferred jre)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aptana.com/rails&#34;&gt;download&lt;/a&gt; and unpack aptana zip to ~/.aptana&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://releases.mozilla.org/pub/mozilla.org/xulrunner/releases/1.8.1.3/contrib/linux-i686/xulrunner-1.8.1.3.en-US.linux-i686-20080128.tar.gz&#34;&gt;download&lt;/a&gt; and unpack xulrunner to ~/.xulrunner&lt;/li&gt;
&lt;li&gt;create a script like ~/bin/aptana:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;#!/bin/bash
MOZILLA_FIVE_HOME=~/.xulrunner
if [ $LD_LIBRARY_PATH ]; then
    LD_LIBRARY_PATH=$MOZILLA_FIVE_HOME:$LD_LIBRARY_PATH
else
    LD_LIBRARY_PATH=$MOZILLA_FIVE_HOME
fi
export MOZILLA_FIVE_HOME LD_LIBRARY_PATH
~/.aptana/AptanaStudio -vm /usr/lib/jvm/java-6-openjdk/bin&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://ubuntuforums.org/showthread.php?t=1139154&#34;&gt;[ubuntu] Installing Aptana on Jaunty &amp;ndash; Ubuntu Forums&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ruby gem server</title>
      <link>http://blog2.snowfrog.net/2009/06/05/ruby-gem-server/</link>
      <pubDate>Fri, 05 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2009/06/05/ruby-gem-server/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m back to Rails development after a few months doing other things.&lt;/p&gt;

&lt;p&gt;Note to brain: the ruby gem server is now started using &lt;strong&gt;gem server &amp;amp;&lt;/strong&gt; rather than &lt;strong&gt;gem_server &amp;amp;&lt;/strong&gt;, like it used to be. &lt;/frustration&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://webjazz.blogspot.com/2006/07/offline-rdoc-gem-documentation-in-ruby.html&#34;&gt;Offline rdoc gem documentation in Ruby&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ruby on Rails select_tag default value</title>
      <link>http://blog2.snowfrog.net/2009/03/02/ruby-on-rails-select_tag-default-value/</link>
      <pubDate>Mon, 02 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2009/03/02/ruby-on-rails-select_tag-default-value/</guid>
      <description>&lt;p&gt;When using the Rails helper &lt;strong&gt;select_tag&lt;/strong&gt;, the selected value (ie highlighted value) is a parameter to &lt;strong&gt;options_for_select&lt;/strong&gt;, not select_tag.&lt;/p&gt;

&lt;p&gt;Eg:&lt;/p&gt;

&lt;pre&gt;Number of Rows: &amp;lt;%= select_tag(:numrows, options_for_select(%w{10 20 50 100 200 500}, session[:numrows])) %&amp;gt;&lt;/pre&gt;

&lt;p&gt;(much head-banging-against-wall went into working this out.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ruby on Rails – Foreign Key Constraints in MySQL</title>
      <link>http://blog2.snowfrog.net/2008/10/01/ruby-on-rails-foreign-key-constraints-in-mysql/</link>
      <pubDate>Wed, 01 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>http://blog2.snowfrog.net/2008/10/01/ruby-on-rails-foreign-key-constraints-in-mysql/</guid>
      <description>&lt;p&gt;As an ex-DBA, one of the things that annoys me about Rails is that migrations don&amp;rsquo;t have a way of setting up referential integrity (I&amp;rsquo;m still using Rails 1.2.3, so this may have changed).&lt;/p&gt;

&lt;p&gt;But apart from that, I lurv Rails :-)&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s some code I wrote to for adding and removing foreign key constraints on MySQL (using InnoDB, of course). There&amp;rsquo;s other code out there to do the same thing, but they didn&amp;rsquo;t do what I wanted, or required installing a plugin.&lt;/p&gt;

&lt;p&gt;In the lib directory, add the file &lt;strong&gt;migration_helpers.rb&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;module MigrationHelpers
  def foreign_key(from_table, from_column, to_table, to_column, on_delete=&#39;SET NULL&#39;, on_update=&#39;CASCADE&#39;)
    constraint_name = &#34;fk_#{from_table}_#{to_table}&#34;
    execute %{alter table #{from_table}
      add constraint #{constraint_name}
      foreign key (#{from_column})
      references #{to_table}(#{to_column})
      on delete #{on_delete}
      on update #{on_update}
    }
  end
  def drop_foreign_key(from_table, to_table)
    constraint_name = &#34;fk_#{from_table}_#{to_table}&#34;
    execute &#34;alter table #{from_table} drop foreign key #{constraint_name}&#34;
    execute &#34;alter table #{from_table} drop key #{constraint_name}&#34;
  end
end&lt;/pre&gt;

&lt;p&gt;Then, in a migration you would do something like the following:&lt;/p&gt;

&lt;pre&gt;require &#34;migration_helpers&#34;
class Vmtypes &amp;lt; ActiveRecord::Migration
  extend MigrationHelpers  # see lib/migration_helpers.rb
  def self.up
    create_table :vmtypes, :primary_key =&amp;gt; :vmtype_id do |t|
      t.column :vmname, :string
    end
    execute &#34;alter table asset add column vmtype_id int after vmhost_id;&#34;
    foreign_key :asset, :vmtype_id, :vmtypes, :vmtype_id, &#39;RESTRICT&#39;
  end

  def self.down
    drop_foreign_key :asset, :vmtypes
    drop_table :vmtypes
    remove_column :asset, :vmtype_id
  end
end&lt;/pre&gt;

&lt;p&gt;I wrote this code for MySQL; I don&amp;rsquo;t know whether it would work with other backends. Notice the MySQL oddity that you add a foreign key using one line of code, but drop a foreign key using two lines of code (foreign key then key).&lt;/p&gt;

&lt;p&gt;On of the features of my code for adding the foreign key is that it allows (requires) you to specify the column names. I did this because I like the primary keys in my tables to be named foo_id rather than id, to make things a little more self documenting.&lt;/p&gt;

&lt;p&gt;The next thing I want to work out is how to create/use tables with non-integer primary keys &amp;ndash; seems like an issue that a few people have struggled with.:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.rubyonrails.org/rails/pages/HowToUseNonDatabaseProvidedIDs&#34;&gt;HowToUseNonDatabaseProvidedIDs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://railsforum.com/viewtopic.php?pid=65043&#34;&gt;:id-less legacy databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruby-forum.com/topic/85912&#34;&gt;Active Record and non-numeric, natural primary keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Update 9-June-2009:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve updated my code to allow suffixes on foreign key names &amp;ndash; useful (for example) when having multiple foreign keys going to the same destination table:&lt;/p&gt;

&lt;pre&gt;module MigrationHelpers
 def foreign_key(from_table, from_column, to_table, to_column, suffix=nil, on_delete=&#39;SET NULL&#39;, on_update=&#39;CASCADE&#39;)
   constraint_name = &#34;fk_#{from_table}_#{to_table}&#34;
   constraint_name += &#34;_#{suffix}&#34; unless suffix.nil?
   execute %{alter table #{from_table}
     add constraint #{constraint_name}
     foreign key (#{from_column})
     references #{to_table}(#{to_column})
     on delete #{on_delete}
     on update #{on_update}
   }
 end
 def drop_foreign_key(from_table, to_table, suffix=nil)
   constraint_name = &#34;fk_#{from_table}_#{to_table}&#34;
   constraint_name += &#34;_#{suffix}&#34; unless suffix.nil?
   execute &#34;alter table #{from_table} drop foreign key #{constraint_name}&#34;
   execute &#34;alter table #{from_table} drop key #{constraint_name}&#34;
 end
end&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>